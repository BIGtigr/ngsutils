#!/bin/bash
usage(){
    echo "Usage: bamutils COMMAND"
    echo ""
    echo "Commands"
    echo "  DNA-seq"
    echo "    basecall       - Base caller"
    echo "    minorallele    - Find potential minor allele frequency"
    echo ""
    echo "  RNA-seq"
    echo "    cims           - Finds regions of unusual deletions (CLIP-seq)"
    echo "    count          - Calculates counts/RPKM for genes/BED regions/repeats"
    echo "    expressed      - Finds regions expressed in a BAM file (gene/exon finder)"
    echo ""
    echo "  General"
    echo "    check          - Checks a BAM file for corruption"
    echo "    convertregion  - Converts mapping from region coordinates to genomic"
    echo "                     coordinates (junctions or targeted reference libraries)"
    echo "    extract        - Extracts reads based on regions in a BED file"
    echo "    filter         - Filters out reads based upon user-defined criteria"
    echo "    merge          - Merge multiple BAM files together (taking best-matches)"
    echo "    readpos        - Output the position of specific reads"
    echo "    removeclipping - Removes hard and soft clipping from alignments "
    echo "    split          - Splits a BAM file into smaller pieces"
    echo "    stats          - Calculates simple stats for a BAM file"
    echo "    tag            - Update read names with a suffix (for merging)"
    echo ""
    echo "  Conversions"
    echo "    tobed          - Convert BAM reads to BED regions"
    echo "    tobedgraph     - Convert BAM coverage to bedGraph"
    echo "    tofasta        - Convert BAM reads to FASTA sequences"
    echo "                     (mapped or unmapped)"
    echo "    tofastq        - Convert BAM reads back to FASTQ sequences"
    echo "                     (mapped or unmapped)"
    echo ""
    echo "See 'bamutils help CMD' for more information about a specific command"
    echo -n "ngsutils "
    cat $DIR/VERSION
    echo ""
    exit -1
}

PREFIX="bam_"
SUBDIR="bam_utils"
REAL=`python -c 'import os,sys;print os.path.realpath(sys.argv[1])' "$0"`
DIR=`dirname "$REAL"`

source "$DIR"/common.sh
