#!/bin/bash
usage(){
    echo "Usage: bamutils COMMAND"
    echo ""
    echo "Commands"
    echo "  CLIPSeq"
    echo "    cims_finder   - Finds regions of unusual deletions (CLIP-Seq)"
    echo ""
    echo "  DNASeq"
    echo "    basecall      - Base caller"
    echo "    minorallele   - Find potential minor allele frequency"
    echo ""
    echo "  RNASeq"
    echo "    rpkm          - Calculates RPKM/counts for genes/regions/repeats"
    echo ""
    echo "  Generic"
    echo "    expressed     - Finds regions expressed in a BAM file"
    echo "    filter        - Removes reads from a BAM file based on criteria"
    echo "    region_to_ref - Converts region mapping to genomic mapping"
    echo "    split         - Splits a BAM file into smaller pieces"
    echo "    stats         - Calculates simple stats for a BAM file"
    echo ""
    echo "  Conversions"
    echo "    to_bed        - Convert BAM reads to BED regions"
    echo "    to_bedgraph   - Convert BAM coverage to BedGraph"
    echo "    to_fasta      - Convert BAM reads to FASTA sequences"
    echo "                    (mapped or unmapped)"
    echo "    to_fastq      - Convert BAM reads back to FASTQ sequences"
    echo "                    (mapped or unmapped)"
    echo ""
    echo "See 'bamutils help CMD' for more information about a specific command"
    exit -1
}

if [ "$1" == "" ]; then
    usage
fi

REAL=`python -c 'import os,sys;print os.path.realpath(sys.argv[1])' "$0"`
DIR=`dirname "$REAL"`

"$DIR"/build_deps.sh
if [ $? -ne 0 ]; then exit; fi
export PYTHONPATH=$PYTHONPATH:"$DIR":"$DIR"/ext

if [ "$1" == "help" ]; then
    if [ "$2" == "" ]; then
        usage
    fi
    action=bam_$2.py
    if [ ! -e "$DIR"/bam_utils/$action ]; then
        echo "Unknown command '$2'"
        exit 1
    fi
    "$DIR"/bam_utils/$action -h
else
    action=bam_$1.py
    if [ ! -e "$DIR"/bam_utils/$action ]; then
        echo "Unknown command '$1'"
        exit 1
    fi
    shift

    "$DIR"/bam_utils/$action $@
fi
